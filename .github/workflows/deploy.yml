name: CI/CD Pipeline

on:
  push:
    branches: [ main, android1 ]
    paths:
      - "backend/**"
      - "Dockerfile"
      - "docker-compose.yml"
      - "Caddyfile"
      - ".github/workflows/deploy.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "backend/**"
  workflow_dispatch: {}

jobs:
  test-and-build:
    name: Test, Lint & Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build TypeScript
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./backend/dist/
          retention-days: 1

  deploy:
    name: Deploy to Linode
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/android1')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Sanity check inputs
        run: |
          echo "USER=${{ vars.SERVER_USER }}"
          echo "HOST=${{ vars.SERVER_HOST }}"
          test -n "${{ vars.SERVER_USER }}" && test -n "${{ vars.SERVER_HOST }}" || { echo "Missing vars"; exit 1; }

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          insecure: true
          script_stop: true
          script: |
            set -euo pipefail
            cd ~
            bash -lc './deploy.sh'
