name: Deploy Flutter Web App

on:
  push:
    branches: [ main, android1 ]  # Deploy from main or android1
    paths:
      - "lib/**"
      - "web/**"
      - "pubspec.yaml"
      - "assets/**"
      - ".github/workflows/deploy-web.yml"
  workflow_dispatch: {}   # Allow manual trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.9.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build web app
        run: |
          flutter build web --release \
            --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL }} \
            --dart-define=API_PATH_PREFIX=${{ secrets.API_PATH_PREFIX }} \
            --dart-define=GOOGLE_CLIENT_ID_WEB=${{ secrets.GOOGLE_CLIENT_ID_WEB }} \
            --dart-define=GOOGLE_SERVER_CLIENT_ID=${{ secrets.GOOGLE_SERVER_CLIENT_ID }} \
            --dart-define=APPLE_SERVICE_ID=${{ secrets.APPLE_SERVICE_ID }} \
            --dart-define=APPLE_REDIRECT_URI=${{ secrets.APPLE_REDIRECT_URI }} \
            --dart-define=GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
            --dart-define=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --dart-define=OPENAI_BASE_URL=${{ vars.OPENAI_BASE_URL }} \
            --dart-define=OPENAI_VISION_MODEL=${{ vars.OPENAI_VISION_MODEL }} \
            --dart-define=OPENAI_TEXT_MODEL=${{ vars.OPENAI_TEXT_MODEL }} \
            --dart-define=PLACES_BIAS_LAT=${{ vars.PLACES_BIAS_LAT }} \
            --dart-define=PLACES_BIAS_LNG=${{ vars.PLACES_BIAS_LNG }} \
            --dart-define=PLACES_COMPONENTS=${{ vars.PLACES_COMPONENTS }}

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "build/web/*"
          target: "/var/www/nexa-web"
          strip_components: 2
          rm: true

      - name: Restart web server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Reload Caddy or Nginx to pick up new files
            sudo systemctl reload caddy || sudo systemctl reload nginx || true
